services:
  gateway:
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
    container_name: ocp10_gateway
    ports:
      - "5000:5000"
    depends_on:
      - patientservice
      - noteservice
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_HTTP_PORTS: "5000"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    networks:
      - ocp10_network

  frontend:
    image: ${DOCKER_REGISTRY-}frontend
    container_name: ocp10_frontend
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    volumes:
      - keys:/keys
    networks:
      - ocp10_network

  authservice:
    image: ${DOCKER_REGISTRY-}authservice
    container_name: ocp10_authservice
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - authdb
    networks:
      - ocp10_network

  authdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ocp10_authdb
    ports:
      - "1434:1433"
    volumes:
      - authdb:/var/opt/mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourP@ssword123!"
    networks:
      - ocp10_network

  patientservice:
    image: ${DOCKER_REGISTRY-}patientservice
    container_name: ocp10_patientservice
    build:
      context: .
      dockerfile: PatientService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - patientdb
    networks:
      - ocp10_network

  patientdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ocp10_patientdb
    ports:
      - "1433:1433"
    volumes:
      - patientdb:/var/opt/mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourP@ssword123!"
    networks:
      - ocp10_network

  noteservice:
    image: ${DOCKER_REGISTRY-}noteservice
    container_name: ocp10_noteservice
    build:
      context: .
      dockerfile: NoteService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - notedb
    networks:
      - ocp10_network

  notedb:
    image: mongo:latest
    container_name: ocp10_notedb
    ports:
      - "27017:27017"
    volumes:
      - notedb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "YourPassword123"
    networks:
      - ocp10_network

volumes:
  authdb:
  patientdb:
  notedb:
  keys:
  
networks:
  ocp10_network:
    driver: bridge
