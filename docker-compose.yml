services:

  # Gateway Service
  # API gateway to route requests to backend services
  gateway:
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
    container_name: ocp10_gateway
    ports:
      - "5000:5000"
    depends_on:
      - patientservice
      - noteservice
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_HTTP_PORTS: "5000"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    networks:
      - ocp10_network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.17.0
    container_name: ocp10_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - ocp10_network

  # Kibana
  kibana:
    image: kibana:8.17.0
    container_name: ocp10_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://ocp10_elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ocp10_network

  # Authentication Database
  authdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ocp10_authdb
    ports:
      - "1434:1433"
    volumes:
      - authdb:/var/opt/mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourP@ssword123!"
    networks:
      - ocp10_network

  # Patient Database
  patientdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ocp10_patientdb
    ports:
      - "1433:1433"
    volumes:
      - patientdb:/var/opt/mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourP@ssword123!"
    networks:
      - ocp10_network

  # Note Database
  notedb:
    image: mongo:latest
    container_name: ocp10_notedb
    ports:
      - "27017:27017"
    volumes:
      - notedb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "YourPassword123"
    networks:
      - ocp10_network

  # Frontend Service
  frontend:
    image: ${DOCKER_REGISTRY-}frontend
    container_name: ocp10_frontend
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    volumes:
      - keys:/keys
    networks:
      - ocp10_network

  # Authentication Service
  authservice:
    image: ${DOCKER_REGISTRY-}authservice
    container_name: ocp10_authservice
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - authdb
    networks:
      - ocp10_network

  # Patient Service
  patientservice:
    image: ${DOCKER_REGISTRY-}patientservice
    container_name: ocp10_patientservice
    build:
      context: .
      dockerfile: PatientService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      PATIENTDB_HOST: "ocp10_patientdb"
      PATIENTDB_PORT: 1433
      PATIENTDB_USER: "sa"
      PATIENTDB_PASSWORD: "YourP@ssword123!"
    depends_on:
      - patientdb
    networks:
      - ocp10_network

  # Note Service
  noteservice:
    image: ${DOCKER_REGISTRY-}noteservice
    container_name: ocp10_noteservice
    build:
      context: .
      dockerfile: NoteService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - notedb
    networks:
      - ocp10_network

  # Report Service
  reportservice:
    image: ${DOCKER_REGISTRY-}reportservice
    container_name: ocp10_reportservice
    build:
      context: .
      dockerfile: ReportService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      - elasticsearch
    networks:
      - ocp10_network

volumes:
  authdb:
  patientdb:
  notedb:
  keys:
  es_data:
  
networks:
  ocp10_network:
    driver: bridge
