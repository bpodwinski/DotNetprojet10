@page "/note/add/{PatientId:int?}"

@using System.Net.Http.Json;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Localization
@using Models
@using Services
@using Locales
@using Layout

@inject ILogger<NoteAdd> Logger
@inject CustomHttpClient CustomHttpClient
@inject IStringLocalizer<Resource> Localizer
@inject IJSRuntime JSRuntime

<h2>@Localizer["AddNote"]</h2>

<div class="card mb-4">
    <div class="card-body">
        <EditForm Model="noteModel" OnValidSubmit="Submit">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label class="form-label">@Localizer["Note"]</label>
                <InputTextArea @bind-Value="noteModel.Note" class="form-control" />
                <ValidationMessage For="() => noteModel.Note" />
            </div>

            <button type="submit" class="btn btn-primary">@Localizer["AddNote"]</button>
        </EditForm>
    </div>
</div>

@code {
    [CascadingParameter]
    private MainLayout Layout { get; set; } = default!;

    [Parameter]
    public int? PatientId { get; set; }

    [Parameter]
    public EventCallback OnNoteAdded { get; set; }

    private NoteAddModel noteModel = new NoteAddModel();

    protected override void OnInitialized()
    {
        if (PatientId.HasValue)
        {
            noteModel.PatientId = PatientId.Value;
        }
    }

    private async Task Submit()
    {
        try
        {
            var response = await CustomHttpClient.PostAsync("notes", noteModel);
            if (response.IsSuccessStatusCode)
            {
                Layout.ShowToast(Localizer["NoteAddedSuccess"], Localizer["The note has been successfully added"], ToastSeverity.Success);
                if (OnNoteAdded.HasDelegate)
                {
                    await OnNoteAdded.InvokeAsync();
                }
                noteModel.Note = string.Empty;
            }
            else
            {
                Layout.ShowToast(Localizer["NoteAddedFailed"], Localizer["Failed to add the note"], ToastSeverity.Warning);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "An error occurred while adding the note for PatientId {PatientId}", noteModel.PatientId);
            Layout.ShowToast(Localizer["NoteAddedError"], Localizer["An unexpected error occurred. Please try again later."], ToastSeverity.Error);
        }
    }
}
