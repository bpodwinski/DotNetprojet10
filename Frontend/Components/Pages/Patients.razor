@page "/patients"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using System.Globalization
@using Frontend.Locales
@using Frontend.Services
@using System.Text.Json

@inject CustomHttpClient CustomHttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IStringLocalizer<Resource> Localizer
@inject NavigationManager NavigationManager

<PageTitle>@Localizer["Patients"]</PageTitle>

<h1>@Localizer["Patients"]</h1>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary mb-3" @onclick="Create">@Localizer["Add"]</button>

        <table class="table">
            <thead>
                <tr>
                    <th>@Localizer["ID"]</th>
                    <th>@Localizer["FirstName"]</th>
                    <th>@Localizer["LastName"]</th>
                    <th>@Localizer["BirthDate"]</th>
                    <th>@Localizer["Gender"]</th>
                    <th>@Localizer["Address"]</th>
                    <th>@Localizer["Phone"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var patient in patients)
                {
                    <tr>
                        <td>@patient.Id</td>
                        <td>@patient.FirstName</td>
                        <td>
                            <a href="/patients/@patient.Id">@patient.LastName</a>
                        </td>
                        <td>@patient.DateOfBirth.ToShortDateString()</td>
                        <td>@patient.Gender</td>
                        <td>@patient.Address</td>
                        <td>@patient.PhoneNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to access this page. Please log in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Patient> patients = new();
    private string apiData = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated ?? false)
        {
            try
            {
                var response = await CustomHttpClient.GetAsync("patients");
                if (response.IsSuccessStatusCode)
                {
                    var responseContent = await response.Content.ReadAsStringAsync();
                    patients = JsonSerializer.Deserialize<List<Patient>>(responseContent, new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    }) ?? new List<Patient>();
                }
                else
                {
                    apiData = "Error: Unable to fetch data";
                }
            }
            catch (Exception ex)
            {
                apiData = $"Error: {ex.Message}";
            }
        }
        else
        {
            apiData = "You are not authenticated.";
        }
    }

    private void Create()
    {
        NavigationManager.NavigateTo("/patient/add");
    }

    private class Patient
    {
        public int Id { get; set; }
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public DateTime DateOfBirth { get; set; }
        public string Gender { get; set; } = string.Empty;
        public string Address { get; set; } = string.Empty;
        public string PhoneNumber { get; set; } = string.Empty;
    }
}
